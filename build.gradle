apply plugin: 'java' // Create java web application
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.iniestar'
version = '0.0.1-SNAPSHOT' // Application version
sourceCompatibility = '11' // Java version

configurations {
    all {
        // spring log4j2 모듈을 적용할 경우 apache logging도 포함되기 때문에 해당 모듈만 제외시켜줌
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// Configure profile
ext.profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile
println("Profile : " + ext.profile)
sourceSets {
    main {
        resources { // reference to resource file path
            srcDirs "src/main/resources", "src/main/resources/env/${profile}"
        }
    }
}

// ######################################
// Basic setting for spring information #
// ######################################
buildscript {
    ext {
        springBootVersion = '2.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
// ######################################

repositories {
    mavenCentral()
}

dependencies {
    // Springframework dependencies
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    // Apache dependencies
    compileOnly 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.37'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'

    // log4j
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    // Java servlet
    compileOnly 'javax.servlet:jstl:1.2'

    // GSON
    implementation 'com.google.code.gson:gson:2.7'

    // JDBC
//    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    runtimeOnly 'org.postgresql:postgresql'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.10.7'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.10.7'
    implementation 'io.jsonwebtoken:jjwt-impl:0.10.7'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

}

test {
    useJUnitPlatform()
}
